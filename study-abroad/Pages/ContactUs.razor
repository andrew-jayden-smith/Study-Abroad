@page "/contact-us"
@inject IJSRuntime JS
@using System.IO
@using GemBox.Email

<PageTitle>Contact Us</PageTitle>

<h1>Contact Us</h1>

<EditForm Model="Model" OnSubmit="CreateEmail">
    <div class="form-group">Email: <InputText @bind-Value="Model.Sender" class="form-control"></InputText></div>
    <div class="form-group">Name: <InputText @bind-Value="Model.FirstName" class="form-control"></InputText></div>
    <div class="form-group">Message: <InputTextArea @bind-Value="Model.Message" class="form-control" rows="8"></InputTextArea></div>
    <div class="form-group"><button class="btn btn-primary mt-2" type="submit">Submit</button></div>
</EditForm>

@code {
    private EmailForm Model { get; set; } = new EmailForm();
    
    private class EmailForm
    {
        public string Sender { get; set; } = string.Empty;
            public string FirstName { get; set; } = string.Empty;
            public string LastName { get; set; } = string.Empty;
            public string Message { get; set; } = string.Empty;
    }
    private async Task CreateEmail()
    {
        ComponentInfo.SetLicense("FREE-LIMITED-KEY");

        // Create email.
        MailMessage message = new MailMessage("smith2842@marshall.edu");
        message.Subject = "User is interested in recruitment";

        // Save EML file.
        var stream = new MemoryStream();
        message.Save(stream, MailMessageFormat.Eml);
        stream.Position = 0;

        // Download file.
        using var streamRef = new DotNetStreamReference(stream);
        await JS.InvokeVoidAsync("downloadFileFromStream", "BlazorWebAssemblyOutput.eml", streamRef);
    }
}